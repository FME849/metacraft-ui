name: Release on CloudFront
on:
  push:
    branches:
      - "master"
      - "dev"

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CI: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/

      - name: Grant @cocrafts package access
        run: |
          echo "@cocrafts:registry=https://npm.pkg.github.com/" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PACKAGE_TOKEN }}" >> .npmrc

      - name: Set branch name
        id: branch
        run: echo "::set-output name=BRANCH_NAME::${GITHUB_REF##*/}"

      - name: Install wings-cli
        run: npm i -g wings-cli

      - name: Install dependencies
        run: yarn

      - name: Generate Terraform script
        run: yarn gen ${GITHUB_REF##*/}
        if: github.ref == 'refs/heads/master'

      - name: Eslint validation
        run: yarn lint

      - name: Build
        run: wings bundle
        if: github.ref == 'refs/heads/master'
        env:
          PUBLIC_URL: /${{ steps.branch.outputs.BRANCH_NAME }}/

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        if: github.ref == 'refs/heads/master'
        with:
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        run: terraform init
        if: github.ref == 'refs/heads/master'

      - name: Terraform Apply
        run: terraform apply -auto-approve
        if: github.ref == 'refs/heads/master'

      - name: Extract Terraform output
        run: echo $(terraform output -json) > tf-output.json
        if: github.ref == 'refs/heads/master'

      - uses: shallwefootball/s3-upload-action@master
        if: github.ref == 'refs/heads/master'
        with:
          aws_bucket: "metacraft-ui"
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          source_dir: wings
          destination_dir: ${{ steps.branch.outputs.BRANCH_NAME }}

      - name: Invalidate CloudFront cache
        run: yarn invalidate ${GITHUB_REF##*/}
        if: github.ref == 'refs/heads/master'
